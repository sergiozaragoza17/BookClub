<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="{{ asset('css/custom.css') }}">


    {# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand fs-3 fw-bold" href="{{ path('home') }}">BookClub</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                {% if app.user %}
                    {% if not is_granted('ROLE_ADMIN') %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('my_books') }}">My Books</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('my_clubs') }}">My Clubs</a>
                    </li>
                    {% else %}
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('book_index') }}">Books</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('club_index') }}">Clubs</a>
                        </li>
                        <li><a class="nav-link" href="{{ path('admin_genre_new') }}">Genres</a></li>
                        <li><a class="nav-link" href="{{ path('admin_users') }}">Users</a></li>
                        <li><a class="nav-link" href="{{ path('admin_reviews', {'status': 'all'}) }}">Reviews</a></li>
                    {% endif %}

                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('profile') }}">Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('logout') }}">Logout</a>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('login') }}">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('register') }}">Register</a>
                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</nav>
{% include 'partials/confirm_modal.html.twig' %}
{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    {% endfor %}
{% endfor %}
{% block body %}

{% endblock %}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
{% block javascripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            const flashAlerts = document.querySelectorAll('.alert');
            flashAlerts.forEach(function(alert) {
                setTimeout(function() {
                    bootstrap.Alert.getOrCreateInstance(alert).close();
                }, 2000);
            });

            let targetForm = null;
            const confirmModal = new bootstrap.Modal(document.getElementById('confirmModal'));
            const modalMessage = document.getElementById('confirmModalMessage');
            const modalTitle = document.getElementById('confirmModalTitle');
            const modalAccept = document.getElementById('confirmModalAccept');

            document.querySelectorAll("form[data-confirm]").forEach(form => {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();
                    targetForm = form;
                    modalTitle.textContent = form.getAttribute("data-confirm-title") || "Confirm action";
                    modalMessage.textContent = form.getAttribute("data-confirm");
                    confirmModal.show();
                });
            });

            modalAccept.addEventListener("click", function () {
                if (targetForm) {
                    targetForm.submit();
                }
            });
            document.querySelectorAll("form[data-confirm]").forEach(form => {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();
                    targetForm = form;
                    modalTitle.textContent = form.getAttribute("data-confirm-title") || "Confirm action";
                    modalMessage.textContent = form.getAttribute("data-confirm");

                    const action = form.getAttribute("data-confirm-action") || "";
                    modalAccept.className = "btn";
                    if (action.toLowerCase() === "delete") {
                        modalAccept.classList.add("btn-danger");
                    } else if (action.toLowerCase() === "remove") {
                        modalAccept.classList.add("btn-warning");
                    } else {
                        modalAccept.classList.add("btn-primary");
                    }

                    confirmModal.show();
                });
            });
            document.querySelectorAll('.auto-grow').forEach(textarea => {
                textarea.style.height = 'auto';
                textarea.style.height = textarea.scrollHeight + 'px';

                textarea.addEventListener('input', () => {
                    textarea.style.height = 'auto';
                    textarea.style.height = textarea.scrollHeight + 'px';
                });
            });
        });
    </script>
{% endblock %}
</body>
</html>
